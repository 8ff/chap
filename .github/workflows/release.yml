name: Build and Release

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'

    - name: Build the binary
      run: |
        go build -o chap

    - name: Upload binary as artifact
      uses: actions/upload-artifact@v3
      with:
        name: chap-binary
        path: chap

  release:
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest

    steps:
    - name: Download binary artifact
      uses: actions/download-artifact@v3
      with:
        name: chap-binary

    - name: Get the tag name
      id: get_tag_name
      run: echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.TAG_NAME }}
        release_name: Release ${{ env.TAG_NAME }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./chap
        asset_name: chap
        asset_content_type: application/octet-stream
